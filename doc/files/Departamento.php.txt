<?php
/**
 * Fichero departamento.php
 * 
 * Creacion departamentos
 * 
 * @package modelo
 */


/**
 * Clase Departamento
 * 
 * Clase para crear departamentos
 * 
 * @author Mario Labra Villar
 */

class Departamento {
    
    /**
     * @var $codDepartamento    Codigo del departamento
     */
    protected $codDepartamento;
    
    /**
     * @var $altaDepartamento   Fecha de alta del departamento.
     */
    protected $descDepartamento;
    
    /**
     * @var $capacidad  Capacidad del departamento.
     */
    protected $volumenNegocio;
    /**
     * Constructor
     * 
     * @author Mario Labra Villar
     * Ultima revision 30/01/2018
     *
     * @param $codDepartamento codigo de departamento
     * @param $descDepartamento    descripcion de departamento
     * @param $volumenNegocio  volumen de negocio
     */
    function __construct($codDepartamento, $descDepartamento, $volumenNegocio) {
        $this->codDepartamento = $codDepartamento;
        $this->descDepartamento = $descDepartamento;
        $this->volumenNegocio = $volumenNegocio;
    }
    
    /**
     * getCodDepartamento
     * 
     * @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Devuelve el codigo del departamento
     * @return type string codigo de departamento
     */
    
    function getCodDepartamento() {
        return $this->codDepartamento;
    }
    
    /**
     * getDescDepartamento
     * 
     * @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Devuelve la descripcion del departamento
     * @return type string descripcion de departamento
     */

    function getDescDepartamento() {
        return $this->descDepartamento;
    }
    /**
     * getVolumenNegocio
     * 
     *  @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Devuleve el volumen del negocio
     * @return type int volumen de negocio
     */
    function getVolumenNegocio() {
        return $this->volumenNegocio;
    }
    
    /**
     * listar departamentos
     * 
     * @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Devuelve un array con la lista de departamentos
     * @return \Departamento array de departamentos
     */

    public static function listarDepartamentos(){
      $departamentos=null;
        $departamento= DepartamentoPDO::listarDepartamentos();
        if(!empty($departamento)){
            
            for($i=0;$i<count($departamento);$i++){
                $departamentos[$i] = new Departamento($departamento[$i]['codDepartamento'],$departamento[$i]['descDepartamento'],$departamento[$i]['volumenNegocio']);
            }
            
        }
        return $departamentos;
    }
    
    
    /**
     * cerarDepartamento
     * 
     *  @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Funcion que llama a crear departamento
     * @param  $codDepartamento codigo
     * @param  $descDepartamento descripcion
     * @param  $volumenNegocio volumen
     * @return boolean
     */
    public static function crearDepartamento($codDepartamento,$descDepartamento,$volumenNegocio){
        
        return DepartamentoPDO::crearDepartamento($codDepartamento, $descDepartamento, $volumenNegocio);
    }
    
    /**
     * modificarDepartamento
     * 
     *  @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Llama a modificar depatamento
     * @param $codDepartamento codigo
     * @param $descDepartamento descripcion
     * @param  $volumenNegocio volumen
     * @return  boolean
     */
    public static function modificarDepartamento($codDepartamento,$descDepartamento,$volumenNegocio){
        return DepartamentoPDO::modificarDepartamento($codDepartamento, $descDepartamento, $volumenNegocio);
    }
    
    /**
     * borrarDepartamento
     * 
     *  @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Llama a borrar departamento
     * @param  $codDepartamento codigo
     * @return  boolean
     */
    
    public static function borrarDepartamento($codDepartamento){
        
        return DepartamentoPDO::borrarDepartamento($codDepartamento);
    }
    /**
     *  borrarDepartamento
     * 
     *  @author Mario Labra Villar
     * Ultima revision 30/01/2018
     * 
     * Nos dice si el departamento existe
     * @param  $valor codigo del departamento
     * @return  cadena de validacion
     */
    public static function comprobarYaExsistenteDep($valor){
        return DepartamentoPDO::comprobarYaExistenteDep($valor);
    }

}

